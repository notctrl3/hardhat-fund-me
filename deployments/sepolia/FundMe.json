{
  "address": "0x43F32b2767ca3CeD53f4f12815D3BDc663C8162b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa5cd55617acd44598503e2a9d226705fce16535d54d33c59e718d9f7ab4bc602",
  "receipt": {
    "to": null,
    "from": "0x057fEBF9DF9e3050D2e409EeF00f6f82a4C7a220",
    "contractAddress": "0x43F32b2767ca3CeD53f4f12815D3BDc663C8162b",
    "transactionIndex": 70,
    "gasUsed": "948075",
    "logsBloom": "0x
    "blockHash": "0x76ee5c7824bad7e1189e37a8e7e23e357c27f6c78c7e23bd58f3d7b013afed27",
    "transactionHash": "0xa5cd55617acd44598503e2a9d226705fce16535d54d33c59e718d9f7ab4bc602",
    "logs": [],
    "blockNumber": 7060814,
    "cumulativeGasUsed": "7596816",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "77259ca5174ea1c113bc1756fb107041",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"nate\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title  A contract for crowd funding\\n * @author nate\\n * @notice This contract is to demo a sample funding contract\\n * @dev    This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 5 ether;\\n    AggregatorV3Interface private immutable i_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev    This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(i_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // ETH/USD price feed address of Sepolia Network.\\n        return i_priceFeed.version();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return i_priceFeed;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n}\\n\",\"keccak256\":\"0x25df82be8910ac665aa8dae3b0b2cb52833c27220386a452f44610bc56889412\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Sepolia ETH / USD Address\\r\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa618d081497c103de75b6d6fc9ffbe1926a637ecf7087ed9c3d33fe4c45051e8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620011be380380620011be833981810160405281019062000037919062000116565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000148565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000de82620000b1565b9050919050565b620000f081620000d1565b8114620000fc57600080fd5b50565b6000815190506200011081620000e5565b92915050565b6000602082840312156200012f576200012e620000ac565b5b60006200013f84828501620000ff565b91505092915050565b60805160601c60a05160601c61102e6200019060003960008181610213015281816105b001526105e20152600081816102b6015281816104ac0152610588015261102e6000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610939565b6101c7565b6040516100b4919061097f565b60405180910390f35b3480156100c957600080fd5b506100d261020f565b6040516100df919061097f565b60405180910390f35b3480156100f457600080fd5b506100fd6102b4565b005b34801561010b57600080fd5b50610114610578565b604051610121919061097f565b60405180910390f35b34801561013657600080fd5b5061013f610584565b60405161014c91906109a9565b60405180910390f35b34801561016157600080fd5b5061016a6105ac565b6040516101779190610a23565b60405180910390f35b6101886105d4565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610a6a565b61070b565b6040516101be91906109a9565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027757600080fd5b505afa15801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610aac565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610339576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103bd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610373575b5050505050905060005b81518110156104475760008282815181106103e5576103e4610ad9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043f90610b37565b9150506103c7565b50600067ffffffffffffffff81111561046357610462610b80565b5b6040519080825280602002602001820160405280156104915781602001602082028036833780820191505090505b50600190805190602001906104a792919061082f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104ee90610be0565b60006040518083038185875af1925050503d806000811461052b576040519150601f19603f3d011682016040523d82523d6000602084013e610530565b606091505b5050905080610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90610c52565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b674563918244f400006106107f00000000000000000000000000000000000000000000000000000000000000003461075390919063ffffffff16565b1015610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890610cbe565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069f9190610cde565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061072157610720610ad9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061075f8361078f565b90506000670de0b6b3a764000085836107789190610d34565b6107829190610dbd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107d857600080fd5b505afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190610e66565b5050509150506402540be400816108279190610ee1565b915050919050565b8280548282559060005260206000209081019282156108a8579160200282015b828111156108a75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061084f565b5b5090506108b591906108b9565b5090565b5b808211156108d25760008160009055506001016108ba565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610906826108db565b9050919050565b610916816108fb565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e6108d6565b5b600061095d84828501610924565b91505092915050565b6000819050919050565b61097981610966565b82525050565b60006020820190506109946000830184610970565b92915050565b6109a3816108fb565b82525050565b60006020820190506109be600083018461099a565b92915050565b6000819050919050565b60006109e96109e46109df846108db565b6109c4565b6108db565b9050919050565b60006109fb826109ce565b9050919050565b6000610a0d826109f0565b9050919050565b610a1d81610a02565b82525050565b6000602082019050610a386000830184610a14565b92915050565b610a4781610966565b8114610a5257600080fd5b50565b600081359050610a6481610a3e565b92915050565b600060208284031215610a8057610a7f6108d6565b5b6000610a8e84828501610a55565b91505092915050565b600081519050610aa681610a3e565b92915050565b600060208284031215610ac257610ac16108d6565b5b6000610ad084828501610a97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b4282610966565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b7557610b74610b08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bca600083610baf565b9150610bd582610bba565b600082019050919050565b6000610beb82610bbd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c3c600b83610bf5565b9150610c4782610c06565b602082019050919050565b60006020820190508181036000830152610c6b81610c2f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ca8601b83610bf5565b9150610cb382610c72565b602082019050919050565b60006020820190508181036000830152610cd781610c9b565b9050919050565b6000610ce982610966565b9150610cf483610966565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2957610d28610b08565b5b828201905092915050565b6000610d3f82610966565b9150610d4a83610966565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d8357610d82610b08565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dc882610966565b9150610dd383610966565b925082610de357610de2610d8e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e0d81610dee565b8114610e1857600080fd5b50565b600081519050610e2a81610e04565b92915050565b6000819050919050565b610e4381610e30565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b600080600080600060a08688031215610e8257610e816108d6565b5b6000610e9088828901610e1b565b9550506020610ea188828901610e51565b9450506040610eb288828901610a97565b9350506060610ec388828901610a97565b9250506080610ed488828901610e1b565b9150509295509295909350565b6000610eec82610e30565b9150610ef783610e30565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f3657610f35610b08565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f7357610f72610b08565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fb057610faf610b08565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fed57610fec610b08565b5b82820290509291505056fea26469706673582212203e8c1b1039aebd62d692be0bb5fe10d259255383d06e908f8e8573f749f527af64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610939565b6101c7565b6040516100b4919061097f565b60405180910390f35b3480156100c957600080fd5b506100d261020f565b6040516100df919061097f565b60405180910390f35b3480156100f457600080fd5b506100fd6102b4565b005b34801561010b57600080fd5b50610114610578565b604051610121919061097f565b60405180910390f35b34801561013657600080fd5b5061013f610584565b60405161014c91906109a9565b60405180910390f35b34801561016157600080fd5b5061016a6105ac565b6040516101779190610a23565b60405180910390f35b6101886105d4565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610a6a565b61070b565b6040516101be91906109a9565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027757600080fd5b505afa15801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610aac565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610339576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156103bd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610373575b5050505050905060005b81518110156104475760008282815181106103e5576103e4610ad9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043f90610b37565b9150506103c7565b50600067ffffffffffffffff81111561046357610462610b80565b5b6040519080825280602002602001820160405280156104915781602001602082028036833780820191505090505b50600190805190602001906104a792919061082f565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104ee90610be0565b60006040518083038185875af1925050503d806000811461052b576040519150601f19603f3d011682016040523d82523d6000602084013e610530565b606091505b5050905080610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b90610c52565b60405180910390fd5b5050565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b674563918244f400006106107f00000000000000000000000000000000000000000000000000000000000000003461075390919063ffffffff16565b1015610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890610cbe565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069f9190610cde565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006001828154811061072157610720610ad9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061075f8361078f565b90506000670de0b6b3a764000085836107789190610d34565b6107829190610dbd565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156107d857600080fd5b505afa1580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190610e66565b5050509150506402540be400816108279190610ee1565b915050919050565b8280548282559060005260206000209081019282156108a8579160200282015b828111156108a75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061084f565b5b5090506108b591906108b9565b5090565b5b808211156108d25760008160009055506001016108ba565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610906826108db565b9050919050565b610916816108fb565b811461092157600080fd5b50565b6000813590506109338161090d565b92915050565b60006020828403121561094f5761094e6108d6565b5b600061095d84828501610924565b91505092915050565b6000819050919050565b61097981610966565b82525050565b60006020820190506109946000830184610970565b92915050565b6109a3816108fb565b82525050565b60006020820190506109be600083018461099a565b92915050565b6000819050919050565b60006109e96109e46109df846108db565b6109c4565b6108db565b9050919050565b60006109fb826109ce565b9050919050565b6000610a0d826109f0565b9050919050565b610a1d81610a02565b82525050565b6000602082019050610a386000830184610a14565b92915050565b610a4781610966565b8114610a5257600080fd5b50565b600081359050610a6481610a3e565b92915050565b600060208284031215610a8057610a7f6108d6565b5b6000610a8e84828501610a55565b91505092915050565b600081519050610aa681610a3e565b92915050565b600060208284031215610ac257610ac16108d6565b5b6000610ad084828501610a97565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b4282610966565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b7557610b74610b08565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610bca600083610baf565b9150610bd582610bba565b600082019050919050565b6000610beb82610bbd565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610c3c600b83610bf5565b9150610c4782610c06565b602082019050919050565b60006020820190508181036000830152610c6b81610c2f565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ca8601b83610bf5565b9150610cb382610c72565b602082019050919050565b60006020820190508181036000830152610cd781610c9b565b9050919050565b6000610ce982610966565b9150610cf483610966565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2957610d28610b08565b5b828201905092915050565b6000610d3f82610966565b9150610d4a83610966565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d8357610d82610b08565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610dc882610966565b9150610dd383610966565b925082610de357610de2610d8e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e0d81610dee565b8114610e1857600080fd5b50565b600081519050610e2a81610e04565b92915050565b6000819050919050565b610e4381610e30565b8114610e4e57600080fd5b50565b600081519050610e6081610e3a565b92915050565b600080600080600060a08688031215610e8257610e816108d6565b5b6000610e9088828901610e1b565b9550506020610ea188828901610e51565b9450506040610eb288828901610a97565b9350506060610ec388828901610a97565b9250506080610ed488828901610e1b565b9150509295509295909350565b6000610eec82610e30565b9150610ef783610e30565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610f3657610f35610b08565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610f7357610f72610b08565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610fb057610faf610b08565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610fed57610fec610b08565b5b82820290509291505056fea26469706673582212203e8c1b1039aebd62d692be0bb5fe10d259255383d06e908f8e8573f749f527af64736f6c63430008080033",
  "devdoc": {
    "author": "nate",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}